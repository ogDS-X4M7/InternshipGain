import{_ as s,c as n,d as a,o as i}from"./app-DUq5EAM4.js";const l={};function d(t,e){return i(),n("div",null,e[0]||(e[0]=[a(`<h1 id="快速开始一个新项目并完成部署" tabindex="-1"><a class="header-anchor" href="#快速开始一个新项目并完成部署"><span>快速开始一个新项目并完成部署</span></a></h1><p>不必多言，官方网站<a href="https://vuepress.vuejs.org/zh/guide/getting-started.html" target="_blank" rel="noopener noreferrer">点击前往</a></p><h2 id="创建项目简洁版本" tabindex="-1"><a class="header-anchor" href="#创建项目简洁版本"><span>创建项目简洁版本</span></a></h2><p>Node.js v18.19.0+ 包管理器，如 pnpm、yarn、npm 等。(不管怎么样至少要有npm)</p><p>打开想创建文档的文件夹，右键打开终端，输入</p><div class="language-npm line-numbers-mode" data-highlighter="prismjs" data-ext="npm"><pre><code><span class="line">npm init vuepress yourProjectName</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>或</p><div class="language-pnpm line-numbers-mode" data-highlighter="prismjs" data-ext="pnpm"><pre><code><span class="line">pnpm create vuepress yourProjectName</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>跟随指示配置各个方面的一些基础内容，等待项目生成即可，马上就有一个模版项目生成</p><p>注意：像这里打算部署到github的话，过程中有相关的一个问题记得选y(yes)，它会在你的项目里生成.github文件夹，内有deploy-docs.yml</p><h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署"><span>部署</span></a></h2><h3 id="新建github仓库" tabindex="-1"><a class="header-anchor" href="#新建github仓库"><span>新建github仓库</span></a></h3><p>到github上创建一个新仓库，用于部署这个项目，命名仓库</p><p>在上一步中新建项目的docs/.vuepress/config.js 的export default defineUserConfig中添加</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">base: &#39;/github仓库名称/&#39;,</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>VuePress初始化命令不会生成 .gitignore，我们直接自己手动在根目录下新建.gitignore文件，并在.gitignore中添加这些内容：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line"># 依赖目录</span>
<span class="line">node_modules/</span>
<span class="line"></span>
<span class="line"># 构建输出目录</span>
<span class="line">docs/.vuepress/dist/</span>
<span class="line"></span>
<span class="line"># 环境变量</span>
<span class="line">.env</span>
<span class="line"></span>
<span class="line"># IDE/编辑器配置</span>
<span class="line">.vscode/</span>
<span class="line">.idea/</span>
<span class="line">.DS_Store</span>
<span class="line"></span>
<span class="line"># 日志文件</span>
<span class="line">*.log</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="提交初始项目到github仓库" tabindex="-1"><a class="header-anchor" href="#提交初始项目到github仓库"><span>提交初始项目到github仓库</span></a></h3><p>在vscode终端中准备提交代码：</p><p>首先初始化git仓库</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">git init</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>添加远程仓库</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">git remote add origin https://github.com/你的账号名/新建的github仓库名.git</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>提交所有代码</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">git add .</span>
<span class="line">git commit -m &quot;初始项目&quot;</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>由于本地仓库和 GitHub 仓库是独立创建的，现在需要合并无关联历史的仓库，由于都是新项目，我们直接强制合并就可以了</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">git pull origin main --allow-unrelated-histories</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>会出现MERGE_MSG文件，直接关闭它就完成合并了 然后上传代码 有可能显示找不到main，因为可能默认创建分支是master，所以先在终端输入：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">git branch</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>看到下面只有一个master，那就创建main</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">git branch main</span>
<span class="line">git branch</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>现在应该能看到main了，转到分支main上</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">git checkout main</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>然后再提交即可：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">git push -u origin main</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="部署的最后步骤" tabindex="-1"><a class="header-anchor" href="#部署的最后步骤"><span>部署的最后步骤</span></a></h3><p>因为上面交代的配置选择yes，生成了.github文件夹，内有deploy-docs.yml），此时github网站上这个仓库里code内已经会有分支gh-pages了，这就意味着可以部署显示出来了</p><p>进入setting-&gt;pages,把里面的Branch从None改为gh-pages,记得点save保存</p><p>然后来到Actions(也许需要等待)就能看到pages buide and development</p><p>点进去deploy就有你的项目部署链接了，进入链接就能看到部署效果，图片没加载出来没关系，后面都使用自己的资源</p><p>到这里我们就完成了新建项目的部署了。另外，vscode有很方便的GUI，后续项目更改可以在左侧源代码管理里面右键暂存更改，然后输入消息提交，终端git push origin main推上去即可</p>`,41)]))}const p=s(l,[["render",d]]),c=JSON.parse('{"path":"/guide/useVuepress/","title":"快速开始一个新项目并完成部署","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"创建项目简洁版本","slug":"创建项目简洁版本","link":"#创建项目简洁版本","children":[]},{"level":2,"title":"部署","slug":"部署","link":"#部署","children":[{"level":3,"title":"新建github仓库","slug":"新建github仓库","link":"#新建github仓库","children":[]},{"level":3,"title":"提交初始项目到github仓库","slug":"提交初始项目到github仓库","link":"#提交初始项目到github仓库","children":[]},{"level":3,"title":"部署的最后步骤","slug":"部署的最后步骤","link":"#部署的最后步骤","children":[]}]}],"git":{"updatedTime":1748079569000,"contributors":[{"name":"X4M7","username":"X4M7","email":"1415808154@qq.com","commits":2,"url":"https://github.com/X4M7"}],"changelog":[{"hash":"3e476d80bbbabf8c0f5af61df37830937b4e004e","time":1748079569000,"email":"1415808154@qq.com","author":"X4M7","message":"实习收获一完成记录"},{"hash":"06adefa012da00d0346ad5dc22894dda8e445095","time":1748054807000,"email":"1415808154@qq.com","author":"X4M7","message":"vuepress的使用第一节完成"}]},"filePathRelative":"guide/useVuepress/README.md"}');export{p as comp,c as data};

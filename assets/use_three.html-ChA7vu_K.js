import{_ as t,c as r,d as n,a as s,b as a,e as l,w as d,r as p,o as c}from"./app-Bf4mgLVl.js";const u={},m={class:"hint-container details"};function o(v,e){const i=p("RouteLink");return c(),r("div",null,[e[14]||(e[14]=n('<h1 id="其他文档的设计" tabindex="-1"><a class="header-anchor" href="#其他文档的设计"><span>其他文档的设计</span></a></h1><p>可以开始正式写自己的文档了！设计各个页面，这些是和之前所说的<code>link</code>相匹配的文档。</p><h2 id="文档处理与后续的添加操作方式" tabindex="-1"><a class="header-anchor" href="#文档处理与后续的添加操作方式"><span>文档处理与后续的添加操作方式</span></a></h2><p>这里我把文档内容都放进<code>/docs/guide</code>里，<code>guide</code>是创建的新文件夹，为了区分各个章节，又创建了<code>theFirstInternship</code>、<code>theSecondInternship</code>、<code>useVuepress</code>，里面放各自的md文件，即为文档。</p><p><a id="test"></a></p><p>如果后续需要添加章节，其实也基本只是在<code>/docs/guide</code>里创建新文件夹，如果需要添加小节的内容，则到对应的文件夹下添加.md文件然后编写。</p>',6)),s("p",null,[e[1]||(e[1]=a("添加章节后，到")),e[2]||(e[2]=s("code",null,"config.js",-1)),e[3]||(e[3]=a("中去添加")),e[4]||(e[4]=s("code",null,"navbar",-1)),e[5]||(e[5]=a("和")),e[6]||(e[6]=s("code",null,"sidebar",-1)),e[7]||(e[7]=a("项目即可，操作和")),l(i,{to:"/guide/useVuepress/use_one.html#defaulttheme"},{default:d(()=>e[0]||(e[0]=[a("之前")])),_:1,__:[0]}),e[8]||(e[8]=a("讲过的是一样的"))]),e[15]||(e[15]=n(`<p>添加小节的话，也是到<code>config.js</code>，不过只需要给<code>sidebar</code>中对应章节增加<code>children</code>就可以了</p><h2 id="常用格式" tabindex="-1"><a class="header-anchor" href="#常用格式"><span>常用格式</span></a></h2><p>文档的常用格式，或者说我用到了的格式都有：</p><h3 id="标题" tabindex="-1"><a class="header-anchor" href="#标题"><span>标题</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">注意井号和文字中间要有一个空格</span>
<span class="line"># 一级标题</span>
<span class="line">## 二级标题</span>
<span class="line">### 三级标题</span>
<span class="line">#### 四级标题</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>演示结果：演示结果就是这个页面中的各个标题，就不赘述了。</p><h3 id="在文档中添加代码" tabindex="-1"><a class="header-anchor" href="#在文档中添加代码"><span>在文档中添加代码</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">使用的是三个反引号进行划分：</span>
<span class="line">(</span>
<span class="line">    \`\`\`</span>
<span class="line">    this area is for your codes</span>
<span class="line">    \`\`\`</span>
<span class="line">)</span>
<span class="line">代码开始前的上一行写三个反引号，代码结束后的下一行写三个反引号。</span>
<span class="line">从而划分出代码的区域，展示在页面上。</span>
<span class="line">这是Markdown 中表示代码区域的标准方式，被称作代码围栏</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>点击查看演示结果</summary><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">this area is for your codes</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></details><h3 id="换行" tabindex="-1"><a class="header-anchor" href="#换行"><span>换行</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">a:写文本内容的时候经常需要换行，但并不是一个回车就能解决</span>
<span class="line"></span>
<span class="line">b:而是需要间隔一行来表示换行，就像这里的b行和a行，到页面上才会换一行</span>
<span class="line">c:而如果只是一个回车，就像这里的b行和c行，页面上是相连的，中间只隔一个空格</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>点击查看演示结果</summary><p>a:写文本内容的时候经常需要换行，但并不是一个回车就能解决</p><p>b:而是需要间隔一行来表示换行，就像这里的b行和a行，到页面上才会换一行 c:而如果只是一个回车，页面上的b和c是相连的，中间只隔了一个空格</p></details><h3 id="链接" tabindex="-1"><a class="header-anchor" href="#链接"><span>链接</span></a></h3><p>在写文档的时候链接是经常用到的，我用到的几种链接如下：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">注意：锚点链接跳转后返回上一页(或点击浏览器刷新旁的返回)就能回到这个地方</span>
<span class="line">[直接链接](https://www.baidu.com/)</span>
<span class="line">[锚点链接](#在文档中添加代码)</span>
<span class="line">[锚点链接也可以跨文档](./use_two.md#总体结构)</span>
<span class="line">[自定义锚点链接](#test)</span>
<span class="line">这里我在上面的文字内容中加入一个a标签，设置id为test，就能跳转到那里</span>
<span class="line">“里面放各自的md文件，即为文档。</span>
<span class="line">&lt;a id=&quot;test&quot;&gt;&lt;/a&gt;</span>
<span class="line">如果后续需要添加章节”</span>
<span class="line">因为有时候可能没有合适的标签让我们锚点跳转，这个时候自定义锚点就能让我们自由跳转</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,15)),s("details",m,[e[10]||(e[10]=s("summary",null,"点击查看演示结果",-1)),e[11]||(e[11]=s("p",null,[s("a",{href:"https://www.baidu.com/",target:"_blank",rel:"noopener noreferrer"},"直接链接")],-1)),e[12]||(e[12]=s("p",null,[s("a",{href:"#%E5%9C%A8%E6%96%87%E6%A1%A3%E4%B8%AD%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81"},"锚点链接")],-1)),s("p",null,[l(i,{to:"/guide/useVuepress/use_two.html#%E5%85%B6%E4%BB%96%E6%96%87%E6%9C%AC%E5%8C%BA%E5%9F%9F%E4%B8%8E%E9%93%BE%E6%8E%A5%E5%86%99%E6%B3%95"},{default:d(()=>e[9]||(e[9]=[a("锚点链接也可以跨文档")])),_:1,__:[9]})]),e[13]||(e[13]=s("p",null,[s("a",{href:"#test"},"自定义锚点链接")],-1))]),e[16]||(e[16]=n(`<h4 id="一点注意事项" tabindex="-1"><a class="header-anchor" href="#一点注意事项"><span>一点注意事项</span></a></h4><p>在后续我使用链接的过程中，发现链接无法识别标题下划线，会将标题下划线识别成<code>-</code>，例如：</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line"># 这是一个带有下划线_的标题</span>
<span class="line"></span>
<span class="line">[点击跳转到下划线标题](#这是一个带有下划线_的标题)</span>
<span class="line">[点击跳转到下划线标题](#这是一个带有下划线-的标题)</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这两个链接只有使用<code>-</code>的链接能够被识别并正确使用，使用下划线<code>_</code>的链接则不能找到标题，无法跳转到对应位置，在演示结果中点击可以看到测试效果，只有第二个链接能正常识别标题并跳转</p><details class="hint-container details"><summary>点击查看演示结果</summary><h1 id="这是一个带有下划线-的标题" tabindex="-1"><a class="header-anchor" href="#这是一个带有下划线-的标题"><span>这是一个带有下划线_的标题</span></a></h1><p><a href="#%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B8%A6%E6%9C%89%E4%B8%8B%E5%88%92%E7%BA%BF_%E7%9A%84%E6%A0%87%E9%A2%98">点击跳转到下划线标题</a></p><p><a href="#%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B8%A6%E6%9C%89%E4%B8%8B%E5%88%92%E7%BA%BF-%E7%9A%84%E6%A0%87%E9%A2%98">点击跳转到下划线标题</a></p></details><h3 id="斜体字体" tabindex="-1"><a class="header-anchor" href="#斜体字体"><span>斜体字体</span></a></h3><p>我觉得不是很好看，所以不怎么使用，不过写专有名词时还是比较常用的</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">这个是*斜体字*</span>
<span class="line">注意：直接写a*b*c会看不到乘号，解决方法在下面的行内代码</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>点击查看演示结果</summary><p>这个是 <em>斜体字</em></p><p>注意：直接写a<em>b</em>c会看不到乘号，解决方法在下面的行内代码</p></details><h3 id="行内代码" tabindex="-1"><a class="header-anchor" href="#行内代码"><span>行内代码</span></a></h3><p>同样可以用来写专有名词，而且表达式也最好采用这种方式来写</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">比如上面提到的\`a*b*c\`，或者标明\`专有名词\`的时候都可以使用</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><details class="hint-container details"><summary>点击查看演示结果</summary><p>比如上面提到的<code>a*b*c</code>，或者标明<code>专有名词</code>的时候都可以使用</p></details><h3 id="折叠面板" tabindex="-1"><a class="header-anchor" href="#折叠面板"><span>折叠面板</span></a></h3><p>像我们这个页面的演示结果，都是采用折叠面板展示的</p><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text"><pre><code><span class="line">::: details 点击查看演示结果</span>
<span class="line">需要演示的内容</span>
<span class="line">:::</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="hint-container details"><summary>点击查看演示结果</summary><p>需要演示的内容</p></details><p>实际上还有很多用法，因为这个文档比较简单，不需要多复杂，所以我只写了很少一部分我比较常用的内容，后续如果有再使用到别的设计，会再更新。</p>`,18))])}const b=t(u,[["render",o]]),g=JSON.parse('{"path":"/guide/useVuepress/use_three.html","title":"其他文档的设计","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"文档处理与后续的添加操作方式","slug":"文档处理与后续的添加操作方式","link":"#文档处理与后续的添加操作方式","children":[]},{"level":2,"title":"常用格式","slug":"常用格式","link":"#常用格式","children":[{"level":3,"title":"标题","slug":"标题","link":"#标题","children":[]},{"level":3,"title":"在文档中添加代码","slug":"在文档中添加代码","link":"#在文档中添加代码","children":[]},{"level":3,"title":"换行","slug":"换行","link":"#换行","children":[]},{"level":3,"title":"链接","slug":"链接","link":"#链接","children":[]},{"level":3,"title":"斜体字体","slug":"斜体字体","link":"#斜体字体","children":[]},{"level":3,"title":"行内代码","slug":"行内代码","link":"#行内代码","children":[]},{"level":3,"title":"折叠面板","slug":"折叠面板","link":"#折叠面板","children":[]}]}],"git":{"updatedTime":1748597312000,"contributors":[{"name":"X4M7","username":"X4M7","email":"1415808154@qq.com","commits":5,"url":"https://github.com/X4M7"}],"changelog":[{"hash":"2188f051997d18c8b070447da4b6b59a0e92bfce","time":1748597312000,"email":"1415808154@qq.com","author":"X4M7","message":"补充链接的使用：识别标题下划线为横杠问题"},{"hash":"8307eae543f14acbe8c11056c070d5e84624cad7","time":1748189316000,"email":"1415808154@qq.com","author":"X4M7","message":"调整完了vuepress的格式，添加自定义锚点讲解和之前没做的锚点"},{"hash":"74f8eeada41f95aa446ca5ea831cc24ae55b53cc","time":1748146217000,"email":"1415808154@qq.com","author":"X4M7","message":"完成vuepress全部使用文档，并稍微使用了行内代码，后续增加行内代码优化观感"},{"hash":"eaef5c8a14ae9b3a2e45277ac60c3702ec779f48","time":1748074523000,"email":"1415808154@qq.com","author":"X4M7","message":"改个名字"},{"hash":"66a625f54fe47aa2860ccf067e9da4a0a967ca7b","time":1748074203000,"email":"1415808154@qq.com","author":"X4M7","message":"基本完成vuepress基本使用部分内容"}]},"filePathRelative":"guide/useVuepress/use_three.md"}');export{b as comp,g as data};
